<head><title> Q7 </title></head>
<body>

<?php
include 'open.php';

//Override the PHP configuration file to display all errors
//This is useful during development but generally disabled before release
ini_set('error_reporting', E_ALL);
ini_set('display_errors', true);

//Collect the posted value in a variable called $ticker
$ticker = $_POST['ticker'];
$ratio = $_POST['ratio'];
$weekDateStart = $_POST['weekDateStart'];
$weekDateEnd = $_POST['weekDateEnd'];

echo "<h2>Q7: Between ".$weekDateStart." and ".$weekDateEnd.", of which days with a put/call ratio greater than ".$ratio." did ".$ticker." index go down?</h2>";

$dataPoints = array();

//Determine if any input was actually collected
if (empty($ticker) or empty($ratio) or empty($weekDateStart) or empty($weekDateEnd)) {

   echo "Empty inputs detected.<br><br>";

}

else {

   if ($stmt = $conn->prepare("CALL Q7(?, ?, ?, ?)")) {
      $stmt->bind_param("sdss", $ticker, $ratio, $weekDateStart, $weekDateEnd);

      //Run the actual query
      if ($stmt->execute()) {

         //Store result set generated by the prepared statement
         $result = $stmt->get_result();

         if ($weekDateStart > $weekDateEnd) {
            echo "Error: Start date is after end date.";
         } elseif ($weekDateStart < '2013-04-06' || $weekDateEnd > '2015-04-01') {
            echo "Invalid dates.";
         } elseif ($result->num_rows == 0) {
            //Result contains no rows at all
            echo "Invalid dates, invalid tickers, or no result from those dates.";
	 } elseif ($ratio < 0) {
	    echo "Invalid ratio, ratio can't be negative.";
	 } else {
	 
            //Create table to display results
            echo "<table border=\"1px solid black\">";
            echo "<tr><th> Days </th></tr>";

            //Report result set by visiting each row in it
            while ($row = $result->fetch_row()) {
               echo "<tr>";
               echo "<td>".$row[0]."</td>";
               echo "</tr>";
            } 
            echo "</table>";
         }	 

         //We are done with the result set returned above, so free it
         $result->free_result();
      
      } else {

         //Call to execute failed, e.g. because server is no longer reachable,
	 //or because supplied values are of the wrong type
         echo "Execute failed.<br>";
      }

      //Close down the prepared statement
      $stmt->close();

   } else {

       //A problem occurred when preparing the statement; check for syntax errors
       //and misspelled attribute names in the statement string.
      echo "Prepare failed.<br>";
      $error = $conn->errno . ' ' . $conn->error;
      echo $error; 
   }


}

//Close the connection created in open.php
$conn->close();
?>



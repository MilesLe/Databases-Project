<head><title> Q11 </title></head>
<body>

<?php
include 'open.php';

//Override the PHP configuration file to display all errors
//This is useful during development but generally disabled before release
ini_set('error_reporting', E_ALL);
ini_set('display_errors', true);

//Collect the posted value in a variable called $ticker
$ticker = $_POST['ticker'];
$weekDateStart = $_POST['weekDateStart'];
$weekDateEnd = $_POST['weekDateEnd'];
$weekDay = array(
                  "2" => "Monday",
                  "3" => "Tuesday",
                  "4" => "Wednesday",
                  "5" => "Thursday",
                  "6" => "Friday",
                  );

echo "<h2>Q11: Between ".$weekDateStart." and ".$weekDateEnd.", for each day of the week what is the average ".$ticker." and all sector ETF price percent change and option volume ratio?</h2>";

$numTickers = 0;
$tickers = array();
$dataPoints = array();

//Determine if any input was actually collected
if (empty($ticker) or empty($weekDateStart) or empty($weekDateEnd)) {

   echo "Empty inputs detected.<br><br>";

} elseif ($weekDateStart >= $weekDateEnd) {

   echo "Start date must be before end date.<br><br>";
} elseif ($weekDateStart < '2013-04-06' || $weekDateEnd > '2015-04-01') {
   echo "Invalid dates.";

} else {

   if ($stmt = $conn->prepare("CALL Q11Ticker()")) {
      if ($stmt->execute()) {
         $result = $stmt->get_result();
         while ($row = $result->fetch_row()) {
            array_push($tickers, $row[0]);
            $numTickers++;
         }
      }
      $stmt->close();
   }

   if ($stmt = $conn->prepare("CALL Q11Index(?, ?, ?)")) {
      $stmt->bind_param("sss", $ticker, $weekDateStart, $weekDateEnd);

      //Run the actual query
      if ($stmt->execute()) {

         //Store result set generated by the prepared statement
         $result = $stmt->get_result();

         if ($result->num_rows == 0) {
            //Result contains no rows at all
            echo "Invalid dates or no data from those dates.<br><br>";
         } elseif ($weekDateStart < '2013-04-06' || $weekDateEnd > '2015-04-01') {
            echo "Invalid dates.";
         } else {
    
            //Create table to display results
            echo "<table border=\"1px solid black\">";
            echo "<tr><th> Ticker </th><th> Weekday </th><th> Average Price Change </th><th> Average P/C Ratio </th></tr>";
            $dataPointsTemp = array();

            //Report result set by visiting each row in it
            while ($row = $result->fetch_row()) {
               echo "<tr>";
               echo "<td>".$row[0]."</td>";
               echo "<td>".$weekDay[$row[1]]."</td>";
               echo "<td>".round($row[2],3)."%</td>";
               echo "<td>".round($row[3],3)."</td>";
               echo "</tr>";
               array_push($dataPointsTemp, array("label" => $weekDay[$row[1]], "y" => $row[2]));
            }
            echo "</table>";
            array_push($dataPoints, $dataPointsTemp);
         }

         //We are done with the result set returned above, so free it
         $result->free_result();
      } else {
         //Call to execute failed, e.g. because server is no longer reachable,
    //or because supplied values are of the wrong type
         echo "Execute failed.<br>";
      }

      //Close down the prepared statement
      $stmt->close();

   } else {

       //A problem occurred when preparing the statement; check for syntax errors
       //and misspelled attribute names in the statement string.
      echo "Prepare failed ree.<br>";
      $error = $conn->errno . ' ' . $conn->error;
      echo $error; 
   }

   foreach ($tickers as $tick) {
      if ($stmt = $conn->prepare("CALL Q11Sector(?, ?, ?)")) {
         $stmt->bind_param("sss", $tick, $weekDateStart, $weekDateEnd);

         //Run the actual query
         if ($stmt->execute()) {

            //Store result set generated by the prepared statement
            $result = $stmt->get_result();

            if ($result->num_rows == 0) {
               //Result contains no rows at all
               echo "Invalid dates or no data from those dates.<br><br>";
            } elseif ($weekDateStart < '2013-04-06' || $weekDateEnd > '2015-04-01') {
               echo "Invalid dates.";
            } else {
       
               //Create table to display results
               echo "<table border=\"1px solid black\">";
               echo "<tr><th> Ticker </th><th> Weekday </th><th> Average Price Change </th><th> Average P/C Ratio </th></tr>";

               $dataPointsTemp = array();
               //Report result set by visiting each row in it
               while ($row = $result->fetch_row()) {
                  echo "<tr>";
                  echo "<td>".$row[0]."</td>";
                  echo "<td>".$weekDay[$row[1]]."</td>";
                  echo "<td>".round($row[2],3)."%</td>";
                  echo "<td>".round($row[3],3)."</td>";
                  echo "</tr>";
                  array_push($dataPointsTemp, array("label" => $weekDay[$row[1]], "y" => $row[2]));
               }
               echo "</table>";
               array_push($dataPoints, $dataPointsTemp);
            }

            //We are done with the result set returned above, so free it
            $result->free_result();
         } else {
            //Call to execute failed, e.g. because server is no longer reachable,
       //or because supplied values are of the wrong type
            echo "Execute failed.<br>";
         }

         //Close down the prepared statement
         $stmt->close();

      } else {

          //A problem occurred when preparing the statement; check for syntax errors
          //and misspelled attribute names in the statement string.
         echo "Prepare failed.<br>";
         $error = $conn->errno . ' ' . $conn->error;
         echo $error; 
      }
   }

}

//Close the connection created in open.php
$conn->close();
?>

<script type="text/javascript">
window.onload = function () {

var chart = new CanvasJS.Chart("chartContainer", {
   animationEnabled: true,
   title:{
      text: "Average Percent Price Change Per Weekday"
   },
   axisY: {
      title: "Percent Price Change",
      includeZero: true
   },
   legend: {
      cursor:"pointer",
      itemclick : toggleDataSeries
   },
   toolTip: {
      shared: true,
      content: toolTipFormatter
   },
   data: [{
      type: "bar",
      showInLegend: true,
      name: "Index",
      dataPoints: <?php echo json_encode($dataPoints[0], JSON_NUMERIC_CHECK); ?>
   },
   {
      type: "bar",
      showInLegend: true,
      name: "XLB",
      dataPoints: <?php echo json_encode($dataPoints[1], JSON_NUMERIC_CHECK); ?>
   },
   {
      type: "bar",
      showInLegend: true,
      name: "XLE",
      dataPoints: <?php echo json_encode($dataPoints[2], JSON_NUMERIC_CHECK); ?>
   },
   {
      type: "bar",
      showInLegend: true,
      name: "XLF",
      dataPoints: <?php echo json_encode($dataPoints[3], JSON_NUMERIC_CHECK); ?>
   },
   {
      type: "bar",
      showInLegend: true,
      name: "XLI",
      dataPoints: <?php echo json_encode($dataPoints[4], JSON_NUMERIC_CHECK); ?>
   },
   {
      type: "bar",
      showInLegend: true,
      name: "XLK",
      dataPoints: <?php echo json_encode($dataPoints[5], JSON_NUMERIC_CHECK); ?>
   },
   {
      type: "bar",
      showInLegend: true,
      name: "XLP",
      dataPoints: <?php echo json_encode($dataPoints[6], JSON_NUMERIC_CHECK); ?>
   },
   {
      type: "bar",
      showInLegend: true,
      name: "XLU",
      dataPoints: <?php echo json_encode($dataPoints[7], JSON_NUMERIC_CHECK); ?>
   },
   {
      type: "bar",
      showInLegend: true,
      name: "XLV",
      dataPoints: <?php echo json_encode($dataPoints[8], JSON_NUMERIC_CHECK); ?>
   },
   {
      type: "bar",
      showInLegend: true,
      name: "XLY",
      dataPoints: <?php echo json_encode($dataPoints[9], JSON_NUMERIC_CHECK); ?>
   }]
});
chart.render();

function toolTipFormatter(e) {
   var str = "";
   var total = 0 ;
   var str3;
   var str2 ;
   for (var i = 0; i < e.entries.length; i++){
      var str1 = "<span style= \"color:"+e.entries[i].dataSeries.color + "\">" + e.entries[i].dataSeries.name + "</span>: <strong>"+  e.entries[i].dataPoint.y + "</strong> <br/>" ;
      total = e.entries[i].dataPoint.y + total;
      str = str.concat(str1);
   }
   str2 = "<strong>" + e.entries[0].dataPoint.label + "</strong> <br/>";
   str3 = "<span style = \"color:Tomato\">Total: </span><strong>" + total + "</strong><br/>";
   return (str2.concat(str)).concat(str3);
}

function toggleDataSeries(e) {
   if (typeof (e.dataSeries.visible) === "undefined" || e.dataSeries.visible) {
      e.dataSeries.visible = false;
   }
   else {
      e.dataSeries.visible = true;
   }
   chart.render();
}

}
</script>
</head>
<body>
<div id="chartContainer" style="height: 500px; width: 100%;"></div>
<script src="https://canvasjs.com/assets/script/canvasjs.min.js"></script>
</body>

<head><title> Q12 </title></head>
<body>

<?php
include 'open.php';

//Override the PHP configuration file to display all errors
//This is useful during development but generally disabled before release
ini_set('error_reporting', E_ALL);
ini_set('display_errors', true);

//Collect the posted value in a variable called $ticker
$indexTicker = $_POST['indexTicker'];
$bondTicker = $_POST['bondTicker'];
$percent = $_POST['percent'];

echo "<h2>Q12: On all the days which are red for ".$indexTicker." index, what percent of days had an average percent increase in ".$bondTicker." bond greater than ".$percent." percent?</h2>";

$dataPoints = array();

//Determine if any input was actually collected
if (empty($indexTicker) or empty($bondTicker) or empty($percent)) {

   echo "Empty inputs detected.<br><br>";

}

else {

   if ($stmt = $conn->prepare("CALL Q12A(?, ?, ?)")) {
      $stmt->bind_param("ssd", $indexTicker, $bondTicker, $percent);

      //Run the actual query
      if ($stmt->execute()) {

         //Store result set generated by the prepared statement
         $result = $stmt->get_result();

         if ($result->num_rows == 0) {
            //Result contains no rows at all
            echo "Invalid tickers/percent or no such days found for these tickers.";
	 } elseif ($percent < 0) {
            echo "Invalid percent, percent can't be negative.";
	 } else {
	 
            //Create table to display results
            echo "<table border=\"1px solid black\">";
            echo "<tr><th> Percent Days Above Threshold Percent </th></tr>";

            //Report result set by visiting each row in it
            while ($row = $result->fetch_row()) {
               echo "<tr>";
               echo "<td>".$row[0]."</td>";
               echo "</tr>";
            } 
            echo "</table>";
         }	 

         //We are done with the result set returned above, so free it
         $result->free_result();
      
      } else {

         //Call to execute failed, e.g. because server is no longer reachable,
	 //or because supplied values are of the wrong type
         echo "Execute failed.<br>";
      }

      //Close down the prepared statement
      $stmt->close();

   } else {

       //A problem occurred when preparing the statement; check for syntax errors
       //and misspelled attribute names in the statement string.
      echo "Prepare failed.<br>";
      $error = $conn->errno . ' ' . $conn->error;
      echo $error; 
   }

   if ($stmt = $conn->prepare("CALL Q12B(?, ?, ?)")) {
      $stmt->bind_param("ssd", $indexTicker, $bondTicker, $percent);

      //Run the actual query
      if ($stmt->execute()) {

         //Store result set generated by the prepared statement
         $result = $stmt->get_result();

         if ($result->num_rows == 0) {
            //Result contains no rows at all
            echo "Invalid tickers/percent or no such days found for these tickers.";
	 } elseif ($percent < 0) {
            echo "Invalid percent, percent can't be negative.";
	 } else {
	 
            while ($row = $result->fetch_row()) {
               array_push($dataPoints, array( "label"=>$row[0],
                                              "y"=> $row[1]
                                             ));
            } 
         }	 

         //We are done with the result set returned above, so free it
         $result->free_result();
      
      } else {

         //Call to execute failed, e.g. because server is no longer reachable,
	 //or because supplied values are of the wrong type
         echo "Execute failed.<br>";
      }

      //Close down the prepared statement
      $stmt->close();

   } else {

       //A problem occurred when preparing the statement; check for syntax errors
       //and misspelled attribute names in the statement string.
      echo "Prepare failed.<br>";
      $error = $conn->errno . ' ' . $conn->error;
      echo $error; 
   }

}

//Close the connection created in open.php
$conn->close();
?>

<script>
window.onload = function () {

var chart = new CanvasJS.Chart("chartContainer", {
   theme: "light2",
   title: {
         text: "",
         fontFamily: 'tahoma'
      },
      dataPointMinWidth: 80,
         axisY: {
            title: "Percent Change"
         },
         axisX: {
            labelAngle: -45
         },
         toolTip: {content: "min: ${y[0]}, max: ${y[1]}"},
         data: [{
            type: "column",
            color: "#369EAD",
	    //json_encode function called below transforms numeric strings into numbers
            dataPoints: <?php echo json_encode($dataPoints, JSON_NUMERIC_CHECK); ?>
         }]
});
chart.render();

}
</script>
<div id="chartContainer" style="height: 300px; width: 80%;"></div>
<script src="https://canvasjs.com/assets/script/canvasjs.min.js"></script>
</body>
</html>

</body>


<head><title> Q5 </title></head>
<body>

<?php
include 'open.php';

//Override the PHP configuration file to display all errors
//This is useful during development but generally disabled before release
ini_set('error_reporting', E_ALL);
ini_set('display_errors', true);

//Collect the posted value in a variable called $ticker
$inputTicker = $_POST['inputTicker'];
$weekDateStart = $_POST['weekDateStart'];
$weekDateEnd = $_POST['weekDateEnd'];

echo "<h2>Q5: What were the top 5 days between ".$weekDateStart." and ".$weekDateEnd." dates that had the largest change in price in the market index ".$inputTicker."? How many of these days were green? How many red?</h2>";

$dataPoints = array();

//Determine if any input was actually collected
if (empty($inputTicker) or empty($weekDateStart) or empty($weekDateEnd)) {

   echo "Empty inputs detected.<br><br>";

}

else {

   if ($stmt = $conn->prepare("CALL Q5A(?, ?, ?)")) {
      $stmt->bind_param("sss", $inputTicker, $weekDateStart, $weekDateEnd);

      //Run the actual query
      if ($stmt->execute()) {

         //Store result set generated by the prepared statement
         $result = $stmt->get_result();

         if ($weekDateStart > $weekDateEnd) {
            echo "Error: Start date is after end date.";
         } elseif ($weekDateStart < '1999-03-10' || $weekDateEnd > '2017-11-10') {
            echo "Invalid dates.";
         } elseif ($result->num_rows == 0) {
            //Result contains no rows at all
            echo "Invalid dates or no top 5 days that are green for those dates.";
         } else {
	 
            //Create table to display results
            echo "<table border=\"1px solid black\">";
            echo "<tr><th> Green Days </th></tr>";

            //Report result set by visiting each row in it
            while ($row = $result->fetch_row()) {
               echo "<tr>";
               echo "<td>".$row[0]."</td>";
               echo "</tr>";
            } 
            echo "</table>";
         }	 

         //We are done with the result set returned above, so free it
         $result->free_result();
      
      } else {

         //Call to execute failed, e.g. because server is no longer reachable,
	 //or because supplied values are of the wrong type
         echo "Execute failed.<br>";
      }

      //Close down the prepared statement
      $stmt->close();

   } else {

       //A problem occurred when preparing the statement; check for syntax errors
       //and misspelled attribute names in the statement string.
      echo "Prepare failed.<br>";
      $error = $conn->errno . ' ' . $conn->error;
      echo $error; 
   }

   if ($stmt = $conn->prepare("CALL Q5B(?, ?, ?)")) {
      $stmt->bind_param("sss", $inputTicker, $weekDateStart, $weekDateEnd);

      //Run the actual query
      if ($stmt->execute()) {

         //Store result set generated by the prepared statement
         $result = $stmt->get_result();

         if ($weekDateStart > $weekDateEnd) {
            echo "Error: Start date is after end date.";
         } elseif ($weekDateStart < '1999-03-10' || $weekDateEnd > '2017-11-10') {
            echo "";
         } elseif ($result->num_rows == 0) {
            //Result contains no rows at all
            echo "Invalid dates or no top 5 days that are red for those dates.";
         } else {
	 
            //Create table to display results
            echo "<table border=\"1px solid black\">";
            echo "<tr><th> Red Days </th></tr>";

            //Report result set by visiting each row in it
            while ($row = $result->fetch_row()) {
               echo "<tr>";
               echo "<td>".$row[0]."</td>";
               echo "</tr>";
            } 
            echo "</table>";
         }	 

         //We are done with the result set returned above, so free it
         $result->free_result();
      
      } else {

         //Call to execute failed, e.g. because server is no longer reachable,
	 //or because supplied values are of the wrong type
         echo "Execute failed.<br>";
      }

      //Close down the prepared statement
      $stmt->close();

   } else {

       //A problem occurred when preparing the statement; check for syntax errors
       //and misspelled attribute names in the statement string.
      echo "Prepare failed.<br>";
      $error = $conn->errno . ' ' . $conn->error;
      echo $error; 
   }

}

//Close the connection created in open.php
$conn->close();
?>



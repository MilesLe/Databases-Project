
<head><title> Q3 </title></head>
<body>

<?php
include 'open.php';

//Override the PHP configuration file to display all errors
//This is useful during development but generally disabled before release
ini_set('error_reporting', E_ALL);
ini_set('display_errors', true);

//Collect the posted value in a variable called $ticker
$ticker1 = $_POST['ticker1'];
$ticker2 = $_POST['ticker2'];
$yearNum = $_POST['yearNum'];

echo "<h2>Q3: How many days per month the ".$ticker1." sector increase while the ".$ticker2." sector decreased in the year ".$yearNum."?</h2>";

$dataPoints = array();

//Determine if any input was actually collected
if (empty($ticker1) or empty($ticker2) or empty($yearNum)) {

   echo "Empty inputs detected.<br><br>";

}

else {

   //Prepare a statement that we can later execute. The ?'s are placeholders for
   //parameters whose values we will set before we run the query.
   if ($stmt = $conn->prepare("CALL Q3(?, ?, ?)")) {

      //Attach the ? in prepared statements to variables (even if those variables
      //don't hold the values we want yet).  First parameter is a list of types of
      //the variables that follow: 's' means string, 'i' means integer, 'd' means
      //double. E.g., for a statment with 3 ?'s, where middle parameter is an integer
      //and the other two are strings, the first argument included should be "sis".
      $stmt->bind_param("sss", $ticker1, $ticker2, $yearNum);

      //Run the actual query
      if ($stmt->execute()) {

         //Store result set generated by the prepared statement
         $result = $stmt->get_result();

         if ($result->num_rows == 0) {

            //Result contains no rows at all
            echo "Invalid sectors/year or no such days found for these sectors in ".$yearNum.".";

         } else {
	 
            //Create table to display results
            echo "<table border=\"1px solid black\">";
            echo "<tr><th> Month </th> <th> Count </th></tr>";

            //Report result set by visiting each row in it
            while ($row = $result->fetch_row()) {
               array_push($dataPoints, array( "label"=>$row[1],
                                              "y"=>$row[0]
                                             ));

               echo "<tr>";
               echo "<td>".$row[1]."</td>";
               echo "<td>".$row[0]."</td>";
               echo "</tr>";
            } 
         
	 
            echo "</table>";
         }	 

         //We are done with the result set returned above, so free it
         $result->free_result();
      
      } else {

         //Call to execute failed, e.g. because server is no longer reachable,
	 //or because supplied values are of the wrong type
         echo "Execute failed.<br>";
      }

      //Close down the prepared statement
      $stmt->close();

   } else {

       //A problem occurred when preparing the statement; check for syntax errors
       //and misspelled attribute names in the statement string.
      echo "Prepare failed.<br>";
      $error = $conn->errno . ' ' . $conn->error;
      echo $error; 
   }

}

//Close the connection created in open.php
$conn->close();
?>

<script>
window.onload = function () {

var chart = new CanvasJS.Chart("chartContainer", {
   theme: "light2",
   title:{
      text: "Green/Red Frequency"
   },
   axisX: {
      title: "Month"
   },
   axisY: {
      title: "Number of Days"
   },
   data: [{        
      type: "line",
         indexLabelFontSize: 16,
      dataPoints: <?php echo json_encode($dataPoints, JSON_NUMERIC_CHECK); ?>
   }]
});
chart.render();

}
</script>
<div id="chartContainer" style="height: 300px; width: 80%;"></div>
<script src="https://canvasjs.com/assets/script/canvasjs.min.js"></script>
</body>
</html>

</body>
